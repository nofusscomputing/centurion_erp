# Generated by Django 5.1.9 on 2025-06-14 04:25

import access.models.tenancy_abstract
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("access", "0016_remove_tenant_slug_alter_tenant_manager_and_more"),
        ("core", "0033_alter_ticketcommentcategory_parent_and_more"),
        (
            "project_management",
            "0009_remove_projectstate_is_global_alter_projectstate_id_and_more",
        ),
    ]

    operations = [
        migrations.RemoveField(
            model_name="projecttype",
            name="is_global",
        ),
        migrations.AlterField(
            model_name="projecttype",
            name="id",
            field=models.AutoField(
                help_text="ID of the item",
                primary_key=True,
                serialize=False,
                unique=True,
                verbose_name="ID",
            ),
        ),
        migrations.AlterField(
            model_name="projecttype",
            name="model_notes",
            field=models.TextField(
                blank=True,
                help_text="Tid bits of information",
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AlterField(
            model_name="projecttype",
            name="organization",
            field=models.ForeignKey(
                help_text="Tenant this belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="access.tenant",
                validators=[
                    access.models.tenancy_abstract.TenancyAbstractModel.validatate_organization_exists
                ],
                verbose_name="Tenant",
            ),
        ),
        migrations.CreateModel(
            name="ProjectTypeAuditHistory",
            fields=[
                (
                    "centurionaudit_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.centurionaudit",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model this history belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_history",
                        to="project_management.projecttype",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Type History",
                "verbose_name_plural": "Project Type Histories",
                "db_table": "project_management_projecttype_audithistory",
                "managed": True,
            },
            bases=("core.centurionaudit",),
        ),
        migrations.CreateModel(
            name="ProjectTypeCenturionModelNote",
            fields=[
                (
                    "centurionmodelnote_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.centurionmodelnote",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model this note belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="project_management.projecttype",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Type Note",
                "verbose_name_plural": "Project Type Notes",
                "db_table": "project_management_projecttype_centurionmodelnote",
                "managed": True,
            },
            bases=("core.centurionmodelnote",),
        ),
    ]

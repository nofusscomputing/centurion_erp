# Generated by Django 5.1.13 on 2025-10-09 04:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0026_alter_ticketbase_options_and_more"),
        ("devops", "0014_alter_featureflagaudithistory_options_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="FeatureFlagTicket",
            fields=[
                (
                    "modelticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.modelticket",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model the ticket is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="devops.featureflag",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feature Flag Ticket",
                "verbose_name_plural": "Feature Flag Tickets",
                "db_table": "devops_featureflag_ticket",
                "managed": True,
            },
            bases=("core.modelticket",),
        ),
        migrations.CreateModel(
            name="GitGroupTicket",
            fields=[
                (
                    "modelticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.modelticket",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model the ticket is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="devops.gitgroup",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "GIT Group Ticket",
                "verbose_name_plural": "GIT Group Tickets",
                "db_table": "devops_gitgroup_ticket",
                "managed": True,
            },
            bases=("core.modelticket",),
        ),
        migrations.CreateModel(
            name="GitHubRepositoryTicket",
            fields=[
                (
                    "modelticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.modelticket",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model the ticket is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="devops.githubrepository",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "GitHub Repository Ticket",
                "verbose_name_plural": "GitHub Repository Tickets",
                "db_table": "devops_githubrepository_ticket",
                "managed": True,
            },
            bases=("core.modelticket",),
        ),
        migrations.CreateModel(
            name="GitLabRepositoryTicket",
            fields=[
                (
                    "modelticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.modelticket",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model the ticket is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="devops.gitlabrepository",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "GitLab Repository Ticket",
                "verbose_name_plural": "GitLab Repository Tickets",
                "db_table": "devops_gitlabrepository_ticket",
                "managed": True,
            },
            bases=("core.modelticket",),
        ),
        migrations.CreateModel(
            name="GitRepositoryTicket",
            fields=[
                (
                    "modelticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.modelticket",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model the ticket is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="devops.gitrepository",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "GIT Repository Ticket",
                "verbose_name_plural": "GIT Repository Tickets",
                "db_table": "devops_gitrepository_ticket",
                "managed": True,
            },
            bases=("core.modelticket",),
        ),
    ]

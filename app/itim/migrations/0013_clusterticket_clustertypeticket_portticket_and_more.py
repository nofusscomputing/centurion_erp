# Generated by Django 5.1.13 on 2025-10-09 04:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0026_alter_ticketbase_options_and_more"),
        ("itim", "0012_alter_clusteraudithistory_options_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClusterTicket",
            fields=[
                (
                    "modelticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.modelticket",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model the ticket is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="itim.cluster",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cluster Ticket",
                "verbose_name_plural": "Cluster Tickets",
                "db_table": "itim_cluster_ticket",
                "managed": True,
            },
            bases=("core.modelticket",),
        ),
        migrations.CreateModel(
            name="ClusterTypeTicket",
            fields=[
                (
                    "modelticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.modelticket",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model the ticket is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="itim.clustertype",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cluster Type Ticket",
                "verbose_name_plural": "Cluster Type Tickets",
                "db_table": "itim_clustertype_ticket",
                "managed": True,
            },
            bases=("core.modelticket",),
        ),
        migrations.CreateModel(
            name="PortTicket",
            fields=[
                (
                    "modelticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.modelticket",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model the ticket is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="itim.port",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "Port Ticket",
                "verbose_name_plural": "Port Tickets",
                "db_table": "itim_port_ticket",
                "managed": True,
            },
            bases=("core.modelticket",),
        ),
        migrations.CreateModel(
            name="ServiceTicket",
            fields=[
                (
                    "modelticket_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.modelticket",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        help_text="Model the ticket is for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="itim.service",
                        verbose_name="Model",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Ticket",
                "verbose_name_plural": "Service Tickets",
                "db_table": "itim_service_ticket",
                "managed": True,
            },
            bases=("core.modelticket",),
        ),
    ]
